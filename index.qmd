---
title: "dashboard_alpha"
format: dashboard
logo: images/skype_icon.png
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: load-packages
#| message: false

library(tidyverse)
library(ggtext)
library(readxl)
library(scales)
library(DT)
library(gt)
library(gtExtras)
library(glue)
library(plotly)
library(calendR)
library(cellranger)
library(airportr)
library(leaflet)
library(sf)
# theme_set(theme_minimal(base_size = 24, base_family = "Atkinson Hyperlegible"))
```

```{r}
#| label: load-and-prep-data
#| message: false

roster_file <- dir(path = "~/OneDrive - NJASAP/Documents/Contact List UnionWare Aptify",
                     full.names = T,
                     pattern = "ACTIVE.*\\.xlsx$")

roster <- read_excel(roster_file,
                     sheet = "Sheet1",
                     range = cell_cols(1:25)
                     )

pull_date <- ymd("2024-05-23")

clean_roster <- roster %>%
  rename_with(~tolower(gsub(" ","_", .x))) %>% 
  rename(employee_no = `employee_#`,
         cmi = crew_member_id) %>% 
  mutate(hire_date = ymd(hire_date),
         end_date = ymd(end_date),
         birthday = ymd(birthday),
         full_name = as.character(glue("{last_name}, {first_name}")),
         yos = ceiling(as.duration(hire_date %--% today()) / dyears(1)),
         age = ceiling(as.duration(birthday %--% today()) / dyears(1)),
         hire_ym = as.character(glue("{year(hire_date)}-{str_pad(month(hire_date),2,pad = '0')}")),
         end_ym = ifelse(is.na(end_date),NA,
                          as.character(glue("{year(end_date)}-{str_pad(month(end_date),2,pad = '0')}"))
                          ),
         end_year_yy = str_sub(end_ym, start = -5, end = -4),
         hire_year_yy = str_sub(hire_ym, start = -5, end = -4),
         pull_date = pull_date
        )

### LIST OF MONTHS ###

run_total_months <- clean_roster %>% 
  select(hire_date) %>% 
  mutate(hire_floor = floor_date(hire_date, months(1))) %>% 
  select(hire_floor) %>% 
  filter(hire_floor >= roster_12m_lb) %>% 
  unique()

run_total_months <- as.list(run_total_months$hire_floor)

### Total Pilots at Month ####

fmonth_total <- function(x){

  run_total <- clean_roster %>% 
    select(hire_date, end_date) %>% 
    mutate(month_run = as.character(x)) %>% 
    filter(hire_date < x & !is.na(hire_date)) %>% 
    filter(end_date >= x | is.na(end_date)) %>% 
    count(month_run)

  return(run_total)
}

# fmonth_total(run_total_months[12])

# as_date(19844)

### Bind Total by Month ###

monthly_total <- map_dfr(.x = run_total_months, .f = fmonth_total)

monthly_total <- monthly_total %>% 
  mutate(month_run = ymd(month_run),
         year_month = as.character(glue("{year(month_run)}-{str_pad(month(month_run),2, pad = 0)}"))
         )

# glimpse(monthly_total)

 ### Required Dates ###

roster_max_pull_floor <- floor_date(max(clean_roster$pull_date, na.rm = T), months(1))

roster_12m_lb <- add_with_rollback(roster_max_pull_floor,
                                   months(-11))

```

# Home

```{r}
#| label: all-values
#| results: hide

n_pilots <- clean_roster %>% 
  filter(job_status != "Attritted" & job_status != "Transfered") %>% 
  nrow()

p_pic <- clean_roster %>% 
  filter(job_status != "Attritted" & job_status != "Transfered") %>% 
  count(seat) %>% 
  mutate(p = n / sum(n)) %>% 
  filter(seat == "Pilot In Command") %>% 
  pull(p)

p_sic <- clean_roster %>% 
  filter(job_status != "Attritted" & job_status != "Transfered") %>% 
  count(seat) %>% 
  mutate(p = n / sum(n)) %>% 
  filter(seat == "Second In Command") %>% 
  pull(p)
```

## Row {height="10%"}

```{r}
#| content: valuebox
#| title: "Total Pilots"

list(
  icon = "globe",
  color = "primary",
  value = n_pilots
)
```

```{r}
#| content: valuebox
#| title: "Percent PIC"

list(
  icon = "person-lines-fill",
  color = "secondary",
  value = label_percent(accuracy = 0.1)(p_pic)
)
```

```{r}
#| content: valuebox
#| title: "Percent SIC"

list(
  icon = "person-lines-fill",
  color = "primary",
  value = label_percent(accuracy = 0.1)(p_sic)
)
```

## Row {height="\"30%"}

```{r}
#| title: "Total Pilots"


# total_pilots <- 
monthly_total %>% 
  ggplot(aes(x = month_run,
             y = n,
             text = glue("Year Month: {year_month}\nTotal Pilots: {n}")
             )
         ) +
  geom_line(aes(group = "year_month"))+
  geom_point(size = 3, color = "#3b8ede", alpha = 0.7)+
  # geom_point(size = 6, shape = "circle open")+
  theme_bw()+
  labs(x = NULL,
       y = "Count")+
  theme(plot.subtitle = element_markdown(),
        axis.text.x = element_text(angle = 45, hjust = 1)
        )

ggplotly(total_pilots, tooltip = "text")
```

## Row {height="\"30%"}

```{r}
#| title: "New Hires"

hired_pilots <- seniority %>% 
  select(cmi, doh, year_month, published) %>% 
  mutate(moh = str_pad(month(doh),2,pad = "0"),
         ymh = glue("{year(doh)}-{moh}"),
         ymh = as.character(ymh)) %>% 
  filter(doh > doh_12m_lb & published > max_pub_floor) %>% 
  select(cmi, ymh) %>% 
  count(ymh) %>% 
  ggplot(aes(x = ymh,
             y = n,
             text = glue("Year Month: {ymh}\nPilots Hired: {n}")
             )
         ) +
  geom_line(aes(group = "ymh"))+
  geom_point(size = 3,
             color = "#3b8ede",
             alpha = 0.7)+
  # geom_point(size = 6, shape = "circle open")+
  theme_bw()+
  labs(x = NULL,
       y = "Count")+
  theme(axis.text.x = element_text(angle = 45, hjust = 1)
        )

ggplotly(hired_pilots, tooltip = "text")
```

# Attrition

```{r}
#| label: hire attrition values
#| results: hide


# roster_file <- dir(path = "~/OneDrive - NJASAP/Documents/Contact List UnionWare Aptify",
#                      full.names = T,
#                      pattern = "ACTIVE.*\\.xlsx$")
# 
# roster <- read_excel(roster_file,
#                      sheet = "Sheet1",
#                      range = cell_cols(1:25)
#                      )
# 
# pull_date <- ymd("2024-05-23")
# 
# clean_roster <- roster %>%
#   rename_with(~tolower(gsub(" ","_", .x))) %>% 
#   rename(employee_no = `employee_#`,
#          cmi = crew_member_id) %>% 
#   mutate(hire_date = ymd(hire_date),
#          end_date = ymd(end_date),
#          birthday = ymd(birthday),
#          full_name = as.character(glue("{last_name}, {first_name}")),
#          yos = ceiling(as.duration(hire_date %--% today()) / dyears(1)),
#          age = ceiling(as.duration(birthday %--% today()) / dyears(1)),
#          hire_ym = as.character(glue("{year(hire_date)}-{str_pad(month(hire_date),2,pad = '0')}")),
#          end_ym = ifelse(is.na(end_date),NA,
#                           as.character(glue("{year(end_date)}-{str_pad(month(end_date),2,pad = '0')}"))
#                           ),
#          end_year_yy = str_sub(end_ym, start = -5, end = -4),
#          hire_year_yy = str_sub(hire_ym, start = -5, end = -4),
#          pull_date = pull_date
#         )
# 
#  ### Required Dates ###
# 
# roster_max_pull_floor <- floor_date(max(clean_roster$pull_date, na.rm = T), months(1))
# 
# roster_12m_lb <- add_with_rollback(roster_max_pull_floor,
#                                    months(-11))

n_attrit <- clean_roster %>%
  select(cmi, full_name, hire_date, hire_ym, end_date, end_ym) %>% 
  filter(end_date >= roster_12m_lb ,!is.na(end_date)) %>% 
  count() %>% 
  pull(n)

n_hire <- clean_roster %>%
  select(cmi, full_name, hire_date, hire_ym, end_date, end_ym) %>% 
  filter(hire_date >= roster_12m_lb ,!is.na(hire_date)) %>% 
  count() %>% 
  pull(n)

net_staff <- n_hire-n_attrit

```

## row {height="10%"}

```{r}
#| content: valuebox
#| title: "Total Hires"

list(
  icon = "globe",
  color = "primary",
  value = n_hire
)
```

```{r}
#| content: valuebox
#| title: "Total Attrition"

list(
  icon = "person-lines-fill",
  color = "secondary",
  value = n_attrit
)
```

```{r}
#| content: valuebox
#| title: "Net Staffing"

list(
  icon = "person-lines-fill",
  color = "primary",
  value = net_staff
)
```

## row {height="\"90%"}

```{r}

### Hire & Attrition Multi-Plot

t_end_ym <- clean_roster %>%
  select(cmi, full_name, hire_date, hire_ym, end_date, end_ym) %>% 
  filter(end_date >= roster_12m_lb ,!is.na(end_date)) %>% 
  count(end_ym, name = "end_count")

t_hire_ym <- clean_roster %>%
  select(cmi, full_name, hire_date, hire_ym, end_date, end_ym) %>% 
  filter(hire_date >= roster_12m_lb ,!is.na(hire_date)) %>% 
  count(hire_ym, name = "hire_count")

# join_roster_hire_attrit #

join_hire_attrit <- t_hire_ym %>% 
  left_join(t_end_ym, by = join_by(hire_ym == end_ym))

# Hire Attrit Plot #

hire_attrit_title <- md(glue("Data current as of {year(roster_max_pull_floor)}-{str_pad(month(roster_max_pull_floor),2, pad = 0)} NJASAP Pilot Seniority List"))

join_hire_attrit %>% 
  rename(year_month = hire_ym) %>% 
  mutate(net_gain = hire_count-end_count) %>% 
  ggplot()+
  geom_line(aes(x = year_month, y = hire_count), group = "hire_count", color = "#33FF7B")+
  geom_line(aes(x = year_month, y = end_count), group = "end_count", color = "#FF7B33")+
  geom_point(aes(x = year_month, y = hire_count), size = 3, color = "steelblue", alpha = 0.8)+
  geom_point(aes(x = year_month, y = end_count), size = 3, color = "steelblue", alpha = 0.8)+
  geom_text(aes(x = year_month, y = end_count,
                label = end_count,
                vjust = 1.8))+
    geom_text(aes(x = year_month, y = hire_count,
                label = hire_count,
                vjust = -1.5))+
  scale_y_continuous(limits = c(0,125), n.breaks = 6)+
  theme_bw()+
  labs(x = NULL,
       y = "Count")+
  ggtitle("NJASAP HIRING & ATTRITION",
          subtitle = glue("*Data current as of {year(roster_max_pull_floor)}-{str_pad(month(roster_max_pull_floor),2, pad = 0)} NJASAP Pilot Seniority List*")
            )+
  theme(plot.subtitle = element_markdown(),
        axis.text.x = element_text(angle = 45, hjust = 1)
        )

```

# Fleet Stats

```{r}
#| label: fleet-values
#| results: hide

### ESPN Theme ###

gt_theme_espn <- function(data, ...){
  data %>% 
    opt_all_caps()  %>%
    opt_table_font(
      font = list(
        google_font("Lato"),
        default_fonts()
      )
    )  %>% 
    opt_row_striping() %>% 
    tab_options(
      row.striping.background_color = "#BFCDDF",
      table_body.hlines.color = "#f6f7f7",
      source_notes.font.size = 12,
      table.font.size = 16,
      #table.width = px(700),
      heading.align = "left",
      heading.title.font.size = 24,
      table.border.top.color = "transparent",
      table.border.top.width = px(3),
      data_row.padding = px(7),
      ...
    ) 
}

### Fleet Ratios ###

tfleet_ratio <- seniority %>%
  filter(published > max_pub_floor) %>% 
  select(aircraft, seat) %>% 
  filter(! aircraft %in% c("G-V", "BE-400A", "CE-560", "HS-125-800XPC")) %>% 
  group_by(aircraft, seat) %>% 
  drop_na() %>% 
  count() %>% 
  pivot_wider(names_from = seat, values_from = n) %>% 
  mutate(total = PIC + SIC, pct_PIC = PIC/total, pct_SIC = 1-pct_PIC) %>% 
  arrange(desc(PIC)) %>% 
  ungroup()

# view(tfleet_ratio)


### Create Table ###

tfleet_ratio %>% 
  gt(rowname_col = "aircraft") %>% 
  tab_header(title = md("*NJASAP PIC / SIC Ratio by Fleet*"),
          #   subtitle = md()
             )%>% 
  gt_theme_espn() %>% 
  cols_label(
    pct_PIC = "% PIC",
    pct_SIC = "% SIC",
  ) %>% 
  tab_spanner("Count", columns = c(1:4)) %>% 
  tab_style(
    style = list(
      cell_text(style = "italic"),
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      columns = total
    )
  ) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "--"
  ) %>% 
  cols_width(everything() ~px(75)) %>% 
  tab_footnote(footnote = md(glue("*Data current as of {year(max_pub_floor)}-{month(max_pub_floor)} NJASAP Pilot Seniority List*")
                             ),
               locations = cells_title(groups = "title"),
               placement = "right")
```

```{r}
#| title: "Fleet Ratio"

tfleet_ratio %>% 
  datatable(
    colnames = c("Fleet" = 2, "Total" = 5, "% PIC" = 6, "% SIC" = 7),
    options = list(autoWidth = T)
  ) %>% 
  formatPercentage(5:6,1)
```

# Duty Summary

```{r duty_summary}
#| title: "Duty Summary"
#| results: hide

### Import and merge seniority lists ###

imported_folder_2023 <- dir(path = "~/OneDrive - NJASAP/Documents/Seniority Related/Seniority List - Union/2023", 
                            full.names = T,
                            pattern = "\\d\\d\\d[34]-\\d\\d\\sSeniorityList_UnionCopy.xlsx"
                            )

imported_folder_2024 <- dir(path = "~/OneDrive - NJASAP/Documents/Seniority Related/Seniority List - Union/2024", 
                            full.names = T,
                            pattern = "\\d\\d\\d[34]-\\d\\d\\sSeniorityList_UnionCopy.xlsx"
                            )
imp_folder_dsr <- dir("~/OneDrive - NJASAP/Documents/Duty Status Reports DSR/Power Query Method TEST/DSR Montly RAW",
                             full.names = T,
                             pattern = "\\d\\d\\d[34]-\\d+\\sPilot Duty Summary.*\\.xlsx")

### Create Function to build list of files ###

read_snrty_files <- function(file){
  if(is.na(file)) stop("no file path")
  imported_snrty <- read_excel(file,
                               sheet = "UNION_EXCEL_FILE",
                               range = cell_cols("A:P")
                               )
  imported_snrty
}

read_dsr_files <- function(file){
  if(is.na(file)) stop("no file path")
  imported_dsr <- read_excel(file,
                               sheet = "Pilot Duty Report",
                               range = cell_cols(1:13)
  )
  imported_dsr
}

### Bind files by folder ###

merged_seniority_list_2023 <- map_dfr(.x = imported_folder_2023, .f = read_snrty_files)
merged_seniority_list_2024 <- map_dfr(.x = imported_folder_2024, .f = read_snrty_files)

merged_dsr <- map_dfr(.x = imp_folder_dsr, .f = read_dsr_files)

merged_snrty <- bind_rows(merged_seniority_list_2023, merged_seniority_list_2024)

### Seniority Clean-up ###

clean_merged_snrty <- merged_snrty %>% 
  rename_all(tolower) %>% 
  select(cmi, co_snrty = `company seniority`, snrty = `union seniority`, 4:7,
         equip_lock = `equip lock`, 9:12, tsp_elect = `tsp election`,
         year_month = `year month`, published) %>% 
  mutate(doh = ymd(doh), equip_lock = ymd(equip_lock), published = ymd(published),
         yos_r = ceiling( as.duration(doh %--% published) / dyears(1) )
         )

### DSR Clean-up ###

clean_merged_dsr <- merged_dsr %>% 
  rename_all(tolower) %>% 
  select(1:2, sen_status = `sen status`, 4:6, schedule = `sched type`, duty_code = `duty code`,
         rest, duty_time = `duty time`, end_loc = `end loc`, icao_reg = `icao region`, country) %>% 
  mutate(date = ymd(date),
         rest = ifelse(rest == "24+", "25", rest),
         rest = as.numeric(rest),
         duty_code = ifelse(duty_code == "*", "EXT", duty_code),
         duty_prime = ifelse(duty_code == "EXT",
                             duty_code,
                             str_sub(duty_code,1,1)),
         year = year(date),
         month = str_pad(month(date),2,pad = "0"),
         year_month = glue("{year}-{month}")
  )


### Required Dates ###

dsr_12m_lbk <- add_with_rollback(floor_date(max(clean_merged_dsr$date), months(1)),
                                 months(-11),
                                 roll_to_first = TRUE)
dsr_min_month <- str_pad(month(dsr_12m_lbk),2, pad = "0")
dsr_min_year <- year(dsr_12m_lbk)
dsr_max_month <- str_pad(month(max(clean_merged_dsr$date)),2,pad = "0")
dsr_max_year <- year(max(clean_merged_dsr$date))
dsr_ytd_jan <- floor_date(max(clean_merged_dsr$date), years(1))

### Table Prep -- Seniority List ###

### Filtered for latest seniority list ###

latest_snrty_list <- clean_merged_snrty %>% 
  filter( published > max_pub_floor)

##############################
### DSR Prep for 12-Months ###
##############################

pivot_duty_prime <- clean_merged_dsr %>% 
  select(cmi, date, duty_prime) %>% 
  filter(date >= dsr_12m_lbk) %>% 
  group_by(cmi, duty_prime) %>%
  count() %>% 
  pivot_wider(names_from = duty_prime, values_from = n) %>% 
  mutate(ttl_ext_days = EXT + R) %>% 
  select(cmi, EXT, R, ttl_ext_days, X)

pivot_duty_code <- clean_merged_dsr %>% 
  select(cmi, date, duty_code) %>% 
  filter(date >= dsr_12m_lbk) %>% 
  group_by(cmi, duty_code) %>%
  count() %>% 
  pivot_wider(names_from = duty_code, values_from = n) %>% 
  select(cmi, X2)
  
### Join Duty Code and Duty Prime ###

join_duty_code <- pivot_duty_code %>% 
  left_join(pivot_duty_prime, by = "cmi") %>% 
  select(cmi, EXT, R, ttl_ext_days, X, X2) # Codes to display

### Join Latest DSR and Seniority ###

join_latest_dsr_snrty <- latest_snrty_list %>% 
  left_join(join_duty_code, by = "cmi")

# view(join_latest_dsr_snrty)

### Extended Day 79 Pockets Table 12-Months ###

table_79p_join_dsr <- join_latest_dsr_snrty %>%
  mutate(sdp = ifelse(is.na(sdp), "", glue("({sdp})")),
         name_sdp = as.character(glue("{name} {sdp}")),
       #  name_sdp = as.character(name_sdp)
         ) %>% 
  select(name_sdp, snrty, aircraft, schedule, seat, EXT, R, ttl_ext_days, X2, X)

### Replace NA with 0 ###

table_79p_join_dsr[6:10][is.na(table_79p_join_dsr[6:10])] <- 0

#########################################
### Extended Day 79 Pockets Table YTD ###
#########################################

### DSR Prep for  YTD ###

pivot_ytd_duty_prime <- clean_merged_dsr %>%
  select(cmi, date, duty_prime) %>%
  filter(date >= dsr_ytd_jan) %>%
  group_by(cmi, duty_prime) %>%
  count() %>%
  pivot_wider(names_from = duty_prime, values_from = n) %>%
  mutate(ttl_ext_days = EXT + R) %>%
  select(cmi, EXT, R, ttl_ext_days, X)

pivot_ytd_duty_code <- clean_merged_dsr %>%
  select(cmi, date, duty_code) %>%
  filter(date >= dsr_ytd_jan) %>%
  group_by(cmi, duty_code) %>%
  count() %>%
  pivot_wider(names_from = duty_code, values_from = n) %>%
  select(cmi, X2)

### Join Duty Code and Duty Prime ###

join_ytd_duty_code <- pivot_ytd_duty_code %>%
  left_join(pivot_ytd_duty_prime, by = "cmi") %>%
  select(cmi, EXT, R, ttl_ext_days, X, X2) # Codes to display

### Join Latest DSR and Seniority ###

join_latest_ytd_dsr_snrty <- latest_snrty_list %>%
  left_join(join_ytd_duty_code, by = "cmi")

table_79p_join_ytd_dsr <- join_latest_ytd_dsr_snrty %>%
  mutate(sdp = ifelse(is.na(sdp), "", glue("({sdp})")),
         name_sdp = as.character(glue("{name} {sdp}")),
       #  name_sdp = as.character(name_sdp)
         ) %>%
  select(name_sdp, snrty, aircraft, schedule, seat, EXT, R, ttl_ext_days, X2, X)

### Replace NA with 0 ###

table_79p_join_ytd_dsr[6:10][is.na(table_79p_join_ytd_dsr[6:10])] <- 0
   

### GT 79 Pockets Table ###

# table_79p_join_dsr %>%
#   mutate(name = as.character(glue("{name} {sdp}"))) %>%
#  # name = map(name, ~gt::html(as.character(.x))) %>% 
#   select(name, snrty, aircraft, schedule, seat, EXT, R, ttl_ext_days, X2, X) %>%
#   arrange(name) %>% 
#   gt(rowname_col = "name")%>% 
#   tab_header(title = md("NJASAP *Pilot Duty Summary*"),
#              subtitle = md(glue(
#                "Period from *{year(m12_month_lb)}-{str_pad(month(m12_month_lb),2,pad = '0')}*
#                to *{year(latest_published_date)}-{str_pad(month(latest_published_date),2,pad = '0')}*")
#              )
#              ) %>% 
#   gt_theme_espn() %>% 
#   cols_label(
#     name = "Name (sdp)",
#     snrty = "Seniority",
#     ttl_ext_days = "Total Ext Days",
#     X2 = "Planned Intl Event"
#   ) %>% 
#   sub_missing(
#     columns = everything(),
#     rows = everything(),
#     missing_text = "--"
#   ) %>% 
#   cols_width(
#     snrty ~px(100),
#     name ~px(225),
#     aircraft ~px(100),
#     schedule ~px(100),
#     seat ~px(40),
#     EXT ~px(40),
#     R ~px(40),
#     X ~px(40),
#     ttl_ext_days ~px(130),
#     everything() ~px(150)) %>% 
#   tab_footnote(footnote = md(glue("*Sniority, aircraft, schedule, 
#                                   and seat based on
#                                   {year(latest_published_date)}-0{month(latest_published_date)}
#                                    seniority list*")),
#                locations = cells_title(groups = "subtitle"),
#                placement = "right")
```

## row {.tabset}

### Duty Summary 12-Month

```{r}
#| title: "Duty Day Summary 12-Months"

table_79p_join_dsr %>% 
  datatable(
    colnames = c("Name", "Senioirty", "Fleet", "Schedult", "Seat", "Ext", "R", "Total (Ext +R)", "Pland Intl", "X"),
    filter = "top",
    options = list(
     # paging = TRUE,
     # pageLength = 25,
      autoWidth = TRUE,
  #    scrollY="100vh",
      scrollCollapse = FALSE
    ),
    caption = htmltools::tags$caption(
      style = 'caption-side: top; text-align: left;',
      'Period from ', htmltools::em(glue("{dsr_min_year}-{dsr_min_month}")),' to ',htmltools::em(glue("{dsr_max_year}-{dsr_max_month}"))
      )
  )
```

### Dut Summary YTD

```{r}
#| title: "Duty Day Summary YTD"

table_79p_join_ytd_dsr %>% 
  datatable(
    colnames = c("Name", "Senioirty", "Fleet", "Schedult", "Seat", "Ext", "R", "Total (Ext +R)", "Pland Intl", "X"),
    filter = "top",
    options = list(
     # paging = TRUE,
     # pageLength = 25,
      autoWidth = TRUE,
 #     scrollY="100vh",
      scrollCollapse = FALSE
    ),
    caption = htmltools::tags$caption(
      style = 'caption-side: top; text-align: left;',
      'Period from ', htmltools::em(glue("{dsr_min_year}-{dsr_min_month}")),' to ',htmltools::em(glue("{dsr_max_year}-{dsr_max_month}"))
      )
  )
```

# Schedules (Mobile) {scrolling="true"}

## row {.tabset}

### 7&7

#### column {.tabset}

##### 2024 7&7 Line 2
![](images/2024_prod/7_7_Line_2.png)

##### 3
![](images/2024_prod/7_7_Line_3.png)

##### 4
![](images/2024_prod/7_7_Line_4.png)

##### 5
![](images/2024_prod/7_7_Line_5.png)

##### 6
![](images/2024_prod/7_7_Line_6.png)

##### 7
![](images/2024_prod/7_7_Line_7.png)

##### 9
![](images/2024_prod/7_7_Line_9.png)

##### 10
![](images/2024_prod/7_7_Line_10.png)

##### 11
![](images/2024_prod/7_7_Line_11.png)

##### 12
![](images/2024_prod/7_7_Line_12.png)

##### 13
![](images/2024_prod/7_7_Line_13.png)

##### 14
![](images/2024_prod/7_7_Line_14.png)



#### column {.tabset}

##### 2025 7&7 Line 2
![](images/2025_prod/7_7_Line_2.png)

##### 3
![](images/2025_prod/7_7_Line_3.png)

##### 4
![](images/2025_prod/7_7_Line_4.png)

##### 5
![](images/2025_prod/7_7_Line_5.png)

##### 6
![](images/2025_prod/7_7_Line_6.png)

##### 7
![](images/2025_prod/7_7_Line_7.png)

##### 9
![](images/2025_prod/7_7_Line_9.png)

##### 10
![](images/2025_prod/7_7_Line_10.png)

##### 11
![](images/2025_prod/7_7_Line_11.png)

##### 12
![](images/2025_prod/7_7_Line_12.png)

##### 13
![](images/2025_prod/7_7_Line_13.png)

##### 14
![](images/2025_prod/7_7_Line_14.png)

### 8&6

#### column {.tabset}

##### 2024 8&6 Line 2
![](images/2024_prod/8_6_Line_2.png)

##### 3
![](images/2024_prod/8_6_Line_3.png)

##### 4
![](images/2024_prod/8_6_Line_4.png)

##### 5
![](images/2024_prod/8_6_Line_5.png)

##### 6
![](images/2024_prod/8_6_Line_6.png)

##### 7
![](images/2024_prod/8_6_Line_7.png)

##### 9
![](images/2024_prod/8_6_Line_9.png)

##### 10
![](images/2024_prod/8_6_Line_10.png)

##### 11
![](images/2024_prod/8_6_Line_11.png)

##### 12
![](images/2024_prod/8_6_Line_12.png)

##### 13
![](images/2024_prod/8_6_Line_13.png)

##### 14
![](images/2024_prod/8_6_Line_14.png)

#### column {.tabset}

##### 2025 8&6 Line 2
![](images/2025_prod/8_6_Line_2.png)

##### 3
![](images/2025_prod/8_6_Line_3.png)

##### 4
![](images/2025_prod/8_6_Line_4.png)

##### 5
![](images/2025_prod/8_6_Line_5.png)

##### 6
![](images/2025_prod/8_6_Line_6.png)

##### 7
![](images/2025_prod/8_6_Line_7.png)

##### 9
![](images/2025_prod/8_6_Line_9.png)

##### 10
![](images/2025_prod/8_6_Line_10.png)

##### 11
![](images/2025_prod/8_6_Line_11.png)

##### 12
![](images/2025_prod/8_6_Line_12.png)

##### 13
![](images/2025_prod/8_6_Line_13.png)

##### 14
![](images/2025_prod/8_6_Line_14.png)

# HBA Map

```{r}
#| label: load-HBA-data
#| message: false

# Import current HBA list

thba_import <- dir(path = "~/Library/CloudStorage/OneDrive-NJASAP/Documents/_NJASAP General/HBA Quarterly LIst",
                   full.names = T,
                   pattern = "active.*\\.xlsx$")

thba <- read_excel(thba_import,
                   sheet = "Sheet1",
                   range = cell_cols(9:10)
)

# Import, bind, and clean seniority

imported_folder_2024 <- dir(path = "~/OneDrive - NJASAP/Documents/Seniority Related/Seniority List - Union/2024", 
                            full.names = T,
                            pattern = "\\d\\d\\d[34]-\\d\\d\\sSeniorityList_UnionCopy.xlsx"
)

read_snrty_files <- function(file){
  if(is.na(file)) stop("no file path")
  imported_snrty <- read_excel(file,
                               sheet = "UNION_EXCEL_FILE",
                               range = cell_cols("A:P")
  )
  imported_snrty
}

thba_seniority_bind <- map_dfr(.x = imported_folder_2024, .f = read_snrty_files)

thba_seniority <- thba_seniority_bind %>% 
  rename_all(tolower) %>% 
  select(cmi, co_snrty = `company seniority`, snrty = `union seniority`, 4:7,
         equip_lock = `equip lock`, 9:12, tsp_elect = `tsp election`,
         year_month = `year month`, published) %>% 
  mutate(doh = ymd(doh), equip_lock = ymd(equip_lock), published = ymd(published),
         yos_r = ceiling( as.duration(doh %--% published) / dyears(1) )
  )

thba_month_floor <- floor_date(max(thba_seniority$published), unit = "months")

# Create pilots per base table

thba_ppb <- thba_seniority %>% 
  filter(published > thba_month_floor) %>% 
  rename(hba = gateway) %>% 
  mutate(hba = paste0("K",hba), iata = str_sub(hba, -3, -1)) %>% 
  count(hba, name = "ppb", sort = TRUE)

# Prep HBA table

thba <- thba %>% 
  rename_all(tolower) %>% 
  mutate(iata = str_sub(hba, -3, -1))

# Join HBA and PPB tables

thba_map <- thba %>% 
  left_join(thba_ppb, by = "hba") %>% 
  left_join(airports, by = join_by("hba" == "ICAO")) %>% 
  mutate(popup = paste0(hba, "<br>", Name, "<br>", "Total Pilots: ", ppb),
         status_color = case_when(
           status == 1 ~"blue",
           status == 2 ~"orange",
           status == 3 ~"red",
           TRUE ~"green"
         )) %>% 
  select(hba, status, status_color , ppb, Name, City, Latitude, Longitude, popup)

```

```{r}
#| label: print-hab-map

# Draw the map
# US Center 39.8283° N, 98.5795° W

icons <- awesomeIcons(markerColor = thba_map$status_color)

phba_map <- thba_map %>% 
  leaflet() %>%
  addTiles() %>% 
  setView(lng = -98.5795,
          lat = 39.283,
          zoom = 5) %>% 
  setMaxBounds(lng1 = -130.0,
               lng2 = -61.95,
               lat1 = 23.0,
               lat2 = 51.0) %>% 
  addAwesomeMarkers(~Longitude, ~Latitude,
                    icon = icons,
                    popup = ~popup)

phba_map

```

# SDP Awards {orientation="columns" scrolling="true"}

```{r sdp awards}


### New SDP Feb 2024 ###

seniority %>% 
  select(cmi,name, aircraft, sdp, published) %>% 
  pivot_wider(names_from = published, values_from = sdp) %>% 
  mutate(new_sdp = ifelse( is.na(`2024-01-15`) & !is.na(`2024-02-15`), 1, 0)
         )%>% 
  filter(new_sdp == 1) %>% 
  select(name, aircraft, "2024-01-15", "2024-02-15") %>% 
  gt(rowname_col = "name", groupname_col = "aircraft") %>% 
  tab_header(title = md("February SDP Awards")) %>% 
  tab_style(
    style = cell_text(align = "left"),
    locations = cells_title("title")
  ) %>% 
    cols_label(
    "2024-01-15" = md("*2024-01*"),
    "2024-02-15" = md("*2024-02*")
  ) %>% 
    cols_width(
    starts_with("2024") ~px(100),
    everything() ~px(200)
  ) %>% 
    sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "--"
  ) %>% 
  cols_align(
    align = "right",
    columns = "name"
  ) %>%
    cols_align(
    align = "right",
    columns = 3:4
  ) %>%
  gt_theme_538 %>% 
  tab_options(#heading.background.color = "#cce6ff",
              heading.border.bottom.style = "solid")


  # tab_style(
  #   style = cell_fill("lightgray"),
  #   locations = cells_row_groups()
  # ) %>% 
  # cols_align(
  #   align = "right",
  #   columns = "name"
  # ) %>% 
  # cols_align(
  #   align = "center",
  #   columns = starts_with("2024")
  # )
```

```{r}

### New SDP March 2024 ###

seniority %>% 
  select(cmi,name, aircraft, sdp, published) %>% 
  pivot_wider(names_from = published, values_from = sdp) %>% 
  mutate(new_sdp = ifelse( is.na(`2024-02-15`) & !is.na(`2024-03-19`), 1, 0)
  )%>% 
  filter(new_sdp == 1) %>% 
  select(name, aircraft, "2024-02-15", "2024-03-19") %>% 
  gt(rowname_col = "name", groupname_col = "aircraft") %>% 
  tab_header(title = md("March SDP Awards")) %>% 
  tab_style(
    style = cell_text(align = "left"),
    locations = cells_title("title")
  ) %>% 
  cols_label(
    "2024-02-15" = md("*2024-02*"),
    "2024-03-19" = md("*2024-03*")
  ) %>% 
    cols_width(
    starts_with("2024") ~px(100),
    everything() ~px(200)
  ) %>% 
    sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "--"
  ) %>% 
  cols_align(
    align = "right",
    columns = "name"
  ) %>%
    cols_align(
    align = "right",
    columns = 3:4
  ) %>%
  gt_theme_538 %>% 
  tab_options(#heading.background.color = "#cce6ff",
              heading.border.bottom.style = "solid")
```

```{r}

### New SDP April 2024 ###

seniority %>% 
  select(cmi,name, aircraft, sdp, published) %>% 
  pivot_wider(names_from = published, values_from = sdp) %>% 
  mutate(new_sdp = ifelse( is.na(`2024-03-19`) & !is.na(`2024-04-15`), 1, 0)
  )%>% 
  filter(new_sdp == 1) %>% 
  select(name, aircraft, "2024-03-19", "2024-04-15") %>% 
  gt(rowname_col = "name", groupname_col = "aircraft") %>% 
  tab_header(title = md("April SDP Awards")) %>% 
  tab_style(
    style = cell_text(align = "left"),
    locations = cells_title("title")
  ) %>% 
  cols_label(
    "2024-03-19" = md("*2024-03*"),
    "2024-04-15" = md("*2024-04*"),
  ) %>% 
    cols_width(
    starts_with("2024") ~px(100),
    everything() ~px(200)
  ) %>% 
    sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "--"
  ) %>% 
  cols_align(
    align = "right",
    columns = "name"
  ) %>%
    cols_align(
    align = "right",
    columns = 3:4
  ) %>%
  gt_theme_538 %>% 
  tab_options(#heading.background.color = "#cce6ff",
              heading.border.bottom.style = "solid")
```

# Misc Holding

```{r}
#| title: "Extended Day Summary"


### Year Month Summary 12-Month ###

dsr_12_month_back <- max(clean_merged_dsr$date) %m+% months(-12)
dsr_max_month <- month(max(clean_merged_dsr$date))
dsr_max_year <- year(max(clean_merged_dsr$date))

clean_merged_dsr %>% 
  filter(date > dsr_12_month_back) %>% 
  group_by(year_month, duty_code) %>%
  count() %>% 
  pivot_wider(names_from = duty_code, values_from = n) %>% 
  mutate(total_extended = R + EXT) %>% 
  select(year_month, R, EXT, total_extended) %>% 
  ungroup() %>% 
  gt(rowname_col = "year_month") %>% 
  tab_header(title = md("NJASAP *Extended Day Summary*"),
             subtitle = md(glue("Period from *{year(dsr_12_month_back)}-0{month(dsr_12_month_back)+1}*
                             to *{dsr_max_year}-0{dsr_max_month}*")
             )
  ) %>% 
  gt_theme_espn() %>% 
  cols_label(
    R = "VAWD",
    total_extended = "Total Extened"
  ) %>% 
  tab_options(
    stub.font.size = "16"
  ) %>% 
  fmt_number(everything(),
             sep_mark = ",",
             decimals = 0)


```
